[{"question": "What data structure does an ArrayList in Java utilize?", "options": ["A stack", "A linked list", "A hash map", "A binary tree"], "correct_answer": "B"}, {"question": "Which of the following is a characteristic of ArrayList?", "options": ["Fast insertion/removal at arbitrary positions", "Efficient random access", "Optimized for frequent random access", "All of the above"], "correct_answer": "D"}, {"question": "How does the LinkedList differ from ArrayList in terms of memory allocation?", "options": ["LinkedList uses a contiguous memory block, while ArrayList uses a non-contiguous block", "LinkedList uses a non-contiguous memory block, while ArrayList uses a contiguous block", "Both use contiguous memory blocks", "Both use non-contiguous memory blocks"], "correct_answer": "A"}, {"question": "What is the time complexity of removing an element at a specific index in an ArrayList?", "options": ["O(1)", "O(n)", "O(n log n)", "O(n^2)"], "correct_answer": "B"}, {"question": "Which statement best describes the performance of ArrayList when it comes to insertions/removals at the beginning and end?", "options": ["Fast and efficient", "Slow and inefficient", "Fast and amortized", "Slow and non-amortized"], "correct_answer": "C"}, {"question": "When would you choose a LinkedList over an ArrayList?", "options": ["When you need random access.", "When you need to frequently insert or delete elements at the beginning or end.", "When you need to store elements in a predictable order.", "When you need to frequently access elements in the middle."], "correct_answer": "B"}]