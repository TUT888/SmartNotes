**QUESTION 1:** What does the term "Time Complexity" refer to?
**OPTION A:** The amount of time it takes to run an algorithm.
**OPTION B:** The amount of memory an algorithm uses as input size increases.
**OPTION C:** The number of times an algorithm repeats its execution.
**OPTION D:** The number of data structures used by an algorithm.

**ANS:** A


**QUESTION 2:** Which of the following is an example of a Linear Time Complexity?
**OPTION A:** O(n log n)
**OPTION B:** O(n²)
**OPTION C:** O(n!)
**OPTION D:** O(1)

**ANS:** D

**QUESTION 3:** What is the primary focus when analyzing an algorithm's Time Complexity?
**OPTION A:** Optimizing the code for better readability.
**OPTION B:** Determining the algorithm's efficiency as input size increases.
**OPTION C:**  Comparing the execution time of different algorithms.
**OPTION D:** Understanding the specific data structures used in the algorithm.

**ANS:** B

**QUESTION 4:** What does "Space Complexity" refer to in the context of an algorithm?
**OPTION A:** The amount of memory an algorithm uses for storing input data.
**OPTION B:** The amount of memory an algorithm uses for storing intermediate results.
**OPTION C:** The amount of memory an algorithm uses for storing the output.
**OPTION D:** The amount of memory an algorithm uses for storing the variables used in the algorithm.

**ANS:** B

**QUESTION 5:** In the context of the example provided, which of the following describes the Time Complexity of the `sum` function?
**OPTION A:** O(n)
**OPTION B:** O(1)
**OPTION C:** O(n log n)
**OPTION D:** O(2ⁿ)

**ANS:** A 

**QUESTION 6:** Which of the following best describes the "Worst Case" scenario in terms of Time Complexity?
**OPTION A:** The minimum steps an algorithm can take to solve a problem.
**OPTION B:** The expected number of steps an algorithm will take on average.
**OPTION C:** The maximum steps an algorithm will take on any given input.
**OPTION D:** The number of times an algorithm repeats its execution.

**ANS:** C 
